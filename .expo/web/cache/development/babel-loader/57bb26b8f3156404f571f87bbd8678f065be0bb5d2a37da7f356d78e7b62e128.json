{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\nimport { ref, set, getDatabase } from 'firebase/database';\nimport { getStorage, ref as storageRef1, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport SpinnerOverlay from 'react-native-loading-spinner-overlay';\nimport { Text, IconButton } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    companyName = _useState8[0],\n    setCompanyName = _useState8[1];\n  var _useState9 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    phone = _useState10[0],\n    setPhone = _useState10[1];\n  var _useState11 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    facebook = _useState12[0],\n    setFacebook = _useState12[1];\n  var _useState13 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    linkedin = _useState14[0],\n    setLinkedin = _useState14[1];\n  var _useState15 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState16 = _slicedToArray(_useState15, 2),\n    role = _useState16[0],\n    setRole = _useState16[1];\n  var _useState17 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState18 = _slicedToArray(_useState17, 2),\n    description = _useState18[0],\n    setDescription = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    image = _useState20[0],\n    setImage = _useState20[1];\n  var _useState21 = useState(1),\n    _useState22 = _slicedToArray(_useState21, 2),\n    currentStep = _useState22[0],\n    setCurrentStep = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    loading = _useState24[0],\n    setLoading = _useState24[1];\n  var onSignUpPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (currentStep === 1) {\n        var nameError = nameValidator(name.value);\n        var emailError = emailValidator(email.value);\n        var passwordError = passwordValidator(password.value);\n        if (emailError || passwordError || nameError) {\n          setName(_objectSpread(_objectSpread({}, name), {}, {\n            error: nameError\n          }));\n          setEmail(_objectSpread(_objectSpread({}, email), {}, {\n            error: emailError\n          }));\n          setPassword(_objectSpread(_objectSpread({}, password), {}, {\n            error: passwordError\n          }));\n          return;\n        }\n        setCurrentStep(2);\n      } else if (currentStep === 2) {\n        setCurrentStep(3);\n      } else if (currentStep === 3) {\n        try {\n          var imagePickerResult = yield pickImage();\n          if (!imagePickerResult.canceled) {\n            setLoading(true);\n            var imageURL = yield uploadImage(imagePickerResult.assets[0].uri);\n            setTimeout(function () {\n              setImage(imageURL);\n            }, 2000);\n            var auth = getAuth();\n            var authUser = yield createUserWithEmailAndPassword(auth, email.value, password.value);\n            var userUid = authUser.user.uid;\n            var database = getDatabase();\n            var dbRef = ref(database, `users/${userUid}`);\n            set(dbRef, {\n              name: name.value,\n              email: email.value,\n              companyName: companyName.value,\n              phone: phone.value,\n              facebook: \"https://facebook.com/\" + facebook.value,\n              linkedin: \"https://linkedin.com/\" + linkedin.value,\n              role: \"user\",\n              image: imageURL,\n              description: description.value\n            });\n            setLoading(false);\n            Alert.alert('Đăng ký thành công!', 'Chúc bạn có một trải nghiệm vui vẻ.', [{\n              text: 'Xem hồ sơ',\n              onPress: function onPress() {\n                navigation.reset({\n                  index: 0,\n                  routes: [{\n                    name: 'Dashboard'\n                  }]\n                });\n              }\n            }]);\n          }\n        } catch (error) {\n          Alert.alert('Lỗi đăng ký', 'Đã xảy ra lỗi khi đăng ký tài khoản. Vui lòng thử lại sau.');\n          console.log(error);\n          setLoading(false);\n        }\n      }\n    });\n    return function onSignUpPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (permissionResult.granted === false) {\n        Alert.alert('Cần quyền truy cập thư viện ảnh để tiếp tục');\n        return {\n          cancelled: true\n        };\n      }\n      return ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n    });\n    return function pickImage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var uploadImage = function () {\n    var _ref4 = _asyncToGenerator(function* (uri) {\n      var storage = getStorage();\n      var storageRef = storageRef1(storage, 'avatars/' + new Date().getTime() + '.jpg');\n      var response = yield fetch(uri);\n      var blob = yield response.blob();\n      var snapshot = yield uploadBytes(storageRef, blob);\n      return getDownloadURL(snapshot.ref);\n    });\n    return function uploadImage(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsxs(Background, {\n        children: [_jsx(IconButton, {\n          icon: \"arrow-left\",\n          color: \"#000\",\n          size: 30,\n          onPress: function onPress() {\n            return navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'LoginScreen'\n              }]\n            });\n          },\n          style: styles.leftIcon\n        }), _jsx(Logo, {}), _jsx(Header, {\n          children: \"T\\u1EA1o t\\xE0i kho\\u1EA3n\"\n        }), currentStep === 1 && _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            label: \"H\\u1ECD v\\xE0 t\\xEAn\",\n            returnKeyType: \"next\",\n            value: name.value,\n            onChangeText: function onChangeText(text) {\n              return setName({\n                value: text,\n                error: ''\n              });\n            },\n            error: !!name.error,\n            errorText: name.error\n          }), _jsx(TextInput, {\n            label: \"Email\",\n            returnKeyType: \"next\",\n            value: email.value,\n            onChangeText: function onChangeText(text) {\n              return setEmail({\n                value: text,\n                error: ''\n              });\n            },\n            error: !!email.error,\n            errorText: email.error,\n            autoCapitalize: \"none\",\n            autoCompleteType: \"email\",\n            textContentType: \"emailAddress\",\n            keyboardType: \"email-address\"\n          }), _jsx(TextInput, {\n            label: \"M\\u1EADt kh\\u1EA9u\",\n            returnKeyType: \"done\",\n            value: password.value,\n            onChangeText: function onChangeText(text) {\n              return setPassword({\n                value: text,\n                error: ''\n              });\n            },\n            error: !!password.error,\n            errorText: password.error,\n            secureTextEntry: true\n          })]\n        }), currentStep === 2 && _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            label: \"T\\xEAn c\\xF4ng ty\",\n            returnKeyType: \"next\",\n            value: companyName.value,\n            onChangeText: function onChangeText(text) {\n              return setCompanyName({\n                value: text,\n                error: ''\n              });\n            }\n          }), _jsx(TextInput, {\n            label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n            returnKeyType: \"next\",\n            value: phone.value,\n            onChangeText: function onChangeText(text) {\n              return setPhone({\n                value: text,\n                error: ''\n              });\n            },\n            autoCompleteType: \"tel\",\n            textContentType: \"telephoneNumber\",\n            keyboardType: \"phone-pad\"\n          }), _jsx(TextInput, {\n            label: \"Facebook\",\n            returnKeyType: \"next\",\n            value: facebook.value,\n            onChangeText: function onChangeText(text) {\n              return setFacebook({\n                value: text,\n                error: ''\n              });\n            }\n          }), _jsx(TextInput, {\n            label: \"LinkedIn\",\n            returnKeyType: \"next\",\n            value: linkedin.value,\n            onChangeText: function onChangeText(text) {\n              return setLinkedin({\n                value: text,\n                error: ''\n              });\n            }\n          })]\n        }), currentStep === 3 && _jsx(_Fragment, {\n          children: _jsx(TextInput, {\n            label: \"M\\xF4 t\\u1EA3 b\\u1EA3n th\\xE2n\",\n            returnKeyType: \"done\",\n            value: description.value,\n            onChangeText: function onChangeText(text) {\n              return setDescription({\n                value: text,\n                error: ''\n              });\n            },\n            multiline: true\n          })\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: onSignUpPressed,\n          style: {\n            marginTop: 24\n          },\n          children: currentStep === 1 ? 'Tiếp tục' : currentStep === 2 ? 'Tiếp tục' : 'Chọn ảnh đại diện'\n        }), currentStep === 1 && _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            children: \"B\\u1EA1n \\u0111\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.replace('LoginScreen');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"\\u0110\\u0103ng nh\\u1EADp\"\n            })\n          })]\n        }), _jsx(SpinnerOverlay, {\n          visible: loading,\n          color: \"rgba(0, 0, 0, 0.5)\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  leftIcon: {\n    position: 'absolute',\n    left: 1,\n    top: 30\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableOpacity","Alert","Keyboard","TouchableWithoutFeedback","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","ImagePicker","createUserWithEmailAndPassword","getAuth","ref","set","getDatabase","getStorage","storageRef1","uploadBytes","getDownloadURL","SpinnerOverlay","Text","IconButton","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","companyName","setCompanyName","_useState9","_useState10","phone","setPhone","_useState11","_useState12","facebook","setFacebook","_useState13","_useState14","linkedin","setLinkedin","_useState15","_useState16","role","setRole","_useState17","_useState18","description","setDescription","_useState19","_useState20","image","setImage","_useState21","_useState22","currentStep","setCurrentStep","_useState23","_useState24","loading","setLoading","onSignUpPressed","_ref2","_asyncToGenerator","nameError","emailError","passwordError","_objectSpread","imagePickerResult","pickImage","canceled","imageURL","uploadImage","assets","uri","setTimeout","auth","authUser","userUid","user","uid","database","dbRef","alert","text","onPress","reset","index","routes","console","log","apply","arguments","_ref3","permissionResult","requestMediaLibraryPermissionsAsync","granted","cancelled","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","_ref4","storage","storageRef","Date","getTime","response","fetch","blob","snapshot","_x","dismiss","children","style","flex","icon","color","size","styles","leftIcon","label","returnKeyType","onChangeText","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","multiline","mode","marginTop","row","replace","link","visible","create","flexDirection","fontWeight","colors","primary","position","left","top"],"sources":["E:/Github/thelastttt/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, Alert, Keyboard, TouchableWithoutFeedback } from 'react-native'; // Import Keyboard\r\n\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport BackButton from '../components/BackButton';\r\nimport { theme } from '../core/theme';\r\nimport { emailValidator } from '../helpers/emailValidator';\r\nimport { passwordValidator } from '../helpers/passwordValidator';\r\nimport { nameValidator } from '../helpers/nameValidator';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { createUserWithEmailAndPassword, getAuth } from 'firebase/auth';\r\nimport { ref, set, getDatabase } from 'firebase/database';\r\nimport { getStorage, ref as storageRef1, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n// import Modal from 'react-native-modal';\r\nimport SpinnerOverlay from 'react-native-loading-spinner-overlay'; // Import thư viện\r\nimport { Text, IconButton } from 'react-native-paper';\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState({ value: '', error: '' });\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n  const [companyName, setCompanyName] = useState({ value: '', error: '' });\r\n  const [phone, setPhone] = useState({ value: '', error: '' });\r\n  const [facebook, setFacebook] = useState({ value: '', error: '' });\r\n  const [linkedin, setLinkedin] = useState({ value: '', error: '' });\r\n  const [role, setRole] = useState({ value: '', error: '' });\r\n  const [description, setDescription] = useState({ value: '', error: '' });\r\n  const [image, setImage] = useState(null);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSignUpPressed = async () => {\r\n    // setLoading(true);\r\n    if (currentStep === 1) {\r\n      const nameError = nameValidator(name.value);\r\n      const emailError = emailValidator(email.value);\r\n      const passwordError = passwordValidator(password.value);\r\n\r\n      if (emailError || passwordError || nameError) {\r\n        setName({ ...name, error: nameError });\r\n        setEmail({ ...email, error: emailError });\r\n        setPassword({ ...password, error: passwordError });\r\n        return;\r\n      }\r\n\r\n      setCurrentStep(2);\r\n    } else if (currentStep === 2) {\r\n      setCurrentStep(3);\r\n    } else if (currentStep === 3) {\r\n      try {\r\n\r\n        const imagePickerResult = await pickImage();\r\n\r\n        if (!imagePickerResult.canceled) {\r\n          setLoading(true);\r\n          const imageURL = await uploadImage(imagePickerResult.assets[0].uri);\r\n          setTimeout(() => {\r\n            setImage(imageURL);\r\n          }, 2000);\r\n\r\n\r\n          const auth = getAuth();\r\n          const authUser = await createUserWithEmailAndPassword(auth, email.value, password.value);\r\n\r\n          const userUid = authUser.user.uid;\r\n          const database = getDatabase();\r\n          const dbRef = ref(database, `users/${userUid}`);\r\n\r\n\r\n          set(dbRef, {\r\n            name: name.value,\r\n            email: email.value,\r\n            companyName: companyName.value,\r\n            phone: phone.value,\r\n            facebook: \"https://facebook.com/\" + facebook.value,\r\n            linkedin: \"https://linkedin.com/\" + linkedin.value,\r\n            role: \"user\",\r\n            image: imageURL,\r\n            description: description.value,\r\n          });\r\n          setLoading(false);\r\n          // Hiển thị cảnh báo thành công và sau đó chuyển qua Dashboard\r\n          Alert.alert('Đăng ký thành công!', 'Chúc bạn có một trải nghiệm vui vẻ.', [\r\n            {\r\n              text: 'Xem hồ sơ',\r\n              onPress: () => {\r\n                navigation.reset({\r\n                  index: 0,\r\n                  routes: [{ name: 'Dashboard' }],\r\n                });\r\n              },\r\n            },\r\n          ]);\r\n\r\n\r\n        }\r\n      } catch (error) {\r\n        Alert.alert('Lỗi đăng ký', 'Đã xảy ra lỗi khi đăng ký tài khoản. Vui lòng thử lại sau.');\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      Alert.alert('Cần quyền truy cập thư viện ảnh để tiếp tục');\r\n      return { cancelled: true };\r\n    }\r\n\r\n    return ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n  };\r\n\r\n  const uploadImage = async (uri) => {\r\n\r\n    const storage = getStorage();\r\n    const storageRef = storageRef1(storage, 'avatars/' + new Date().getTime() + '.jpg');\r\n    const response = await fetch(uri);\r\n    const blob = await response.blob();\r\n    const snapshot = await uploadBytes(storageRef, blob);\r\n\r\n    return getDownloadURL(snapshot.ref);\r\n\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={{ flex: 1 }}>\r\n        <Background>\r\n          <IconButton\r\n            icon=\"arrow-left\"\r\n            color=\"#000\"\r\n            size={30}\r\n            onPress={() =>\r\n              navigation.reset({\r\n                index: 0,\r\n                routes: [{ name: 'LoginScreen' }],\r\n              })\r\n            }\r\n            style={styles.leftIcon}\r\n          />\r\n          <Logo />\r\n          <Header>Tạo tài khoản</Header>\r\n          {currentStep === 1 && (\r\n            <>\r\n              <TextInput\r\n                label=\"Họ và tên\"\r\n                returnKeyType=\"next\"\r\n                value={name.value}\r\n                onChangeText={(text) => setName({ value: text, error: '' })}\r\n                error={!!name.error}\r\n                errorText={name.error}\r\n              />\r\n              <TextInput\r\n                label=\"Email\"\r\n                returnKeyType=\"next\"\r\n                value={email.value}\r\n                onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n                error={!!email.error}\r\n                errorText={email.error}\r\n                autoCapitalize=\"none\"\r\n                autoCompleteType=\"email\"\r\n                textContentType=\"emailAddress\"\r\n                keyboardType=\"email-address\"\r\n              />\r\n              <TextInput\r\n                label=\"Mật khẩu\"\r\n                returnKeyType=\"done\"\r\n                value={password.value}\r\n                onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n                error={!!password.error}\r\n                errorText={password.error}\r\n                secureTextEntry\r\n              />\r\n            </>\r\n          )}\r\n          {currentStep === 2 && (\r\n            <>\r\n              <TextInput\r\n                label=\"Tên công ty\"\r\n                returnKeyType=\"next\"\r\n                value={companyName.value}\r\n                onChangeText={(text) => setCompanyName({ value: text, error: '' })}\r\n              />\r\n              <TextInput\r\n                label=\"Số điện thoại\"\r\n                returnKeyType=\"next\"\r\n                value={phone.value}\r\n                onChangeText={(text) => setPhone({ value: text, error: '' })}\r\n                autoCompleteType=\"tel\"\r\n                textContentType=\"telephoneNumber\"\r\n                keyboardType=\"phone-pad\"\r\n              />\r\n              <TextInput\r\n                label=\"Facebook\"\r\n                returnKeyType=\"next\"\r\n                value={facebook.value}\r\n                onChangeText={(text) => setFacebook({ value: text, error: '' })}\r\n              />\r\n              <TextInput\r\n                label=\"LinkedIn\"\r\n                returnKeyType=\"next\"\r\n                value={linkedin.value}\r\n                onChangeText={(text) => setLinkedin({ value: text, error: '' })}\r\n              />\r\n            </>\r\n          )}\r\n          {currentStep === 3 && (\r\n            <>\r\n              {/* <Button\r\n              mode=\"outlined\"\r\n              onPress={pickImage}\r\n              style={{ marginTop: 16 }}\r\n            >\r\n              Chọn hình ảnh\r\n            </Button>\r\n\r\n            {image && (\r\n              <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n            )} */}\r\n              <TextInput\r\n                label=\"Mô tả bản thân\"\r\n                returnKeyType=\"done\"\r\n                value={description.value}\r\n                onChangeText={(text) => setDescription({ value: text, error: '' })}\r\n                multiline\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={onSignUpPressed}\r\n            style={{ marginTop: 24 }}\r\n          >\r\n            {currentStep === 1 ? 'Tiếp tục' : currentStep === 2 ? 'Tiếp tục' : 'Chọn ảnh đại diện'}\r\n          </Button>\r\n          {currentStep === 1 && (\r\n            <View style={styles.row}>\r\n              <Text>Bạn đã có tài khoản? </Text>\r\n              <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\r\n                <Text style={styles.link}>Đăng nhập</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n          {/* Loading animation */}\r\n          <SpinnerOverlay\r\n            visible={loading}\r\n            color=\"rgba(0, 0, 0, 0.5)\"\r\n          />\r\n        </Background>\r\n      </View>\r\n\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n  leftIcon: {\r\n    position: 'absolute',\r\n    left: 1,\r\n    top: 30,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}