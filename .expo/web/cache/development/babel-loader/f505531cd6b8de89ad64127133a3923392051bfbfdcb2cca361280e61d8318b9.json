{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, IconButton } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport { ref, get } from 'firebase/database';\nimport { auth, database } from \"../../firebase\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UserScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      image: null,\n      name: '',\n      phone: '',\n      companyName: '',\n      description: '',\n      facebook: '',\n      linkedin: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    profileURL = _useState4[0],\n    setProfileURL = _useState4[1];\n  useEffect(function () {\n    var userId = auth.currentUser.uid;\n    var dbRef = ref(database, `users/${userId}`);\n    get(dbRef).then(function (snapshot) {\n      if (snapshot.exists()) {\n        var data = snapshot.val();\n        setUserData({\n          image: data.image,\n          name: data.name,\n          phone: data.phone,\n          companyName: data.companyName,\n          description: data.description,\n          facebook: data.facebook,\n          linkedin: data.linkedin\n        });\n        var _profileURL = `http://192.168.1.42:5500/CardLink/detail.html?id=${userId}`;\n        setProfileURL(_profileURL);\n      } else {\n        console.log('Không tìm thấy dữ liệu người dùng.');\n        Alert.alert('Lỗi dữ liệu!', 'Không tìm thấy dữ liệu người dùng..', [{\n          text: 'Quay lại',\n          onPress: function onPress() {\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Dashboard'\n              }]\n            });\n          }\n        }]);\n      }\n    }).catch(function (error) {\n      console.error('Lỗi khi truy cập dữ liệu:', error);\n    });\n  }, []);\n  return _jsx(Background, {\n    children: _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(IconButton, {\n        icon: \"arrow-left\",\n        color: \"#000\",\n        size: 20,\n        onPress: function onPress() {\n          return navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Dashboard'\n            }]\n          });\n        },\n        style: styles.leftIcon\n      }), _jsx(IconButton, {\n        icon: \"pencil\",\n        color: \"#000\",\n        size: 20,\n        onPress: function onPress() {\n          return navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'EditScreen'\n            }]\n          });\n        },\n        style: styles.rightIcon\n      }), _jsx(Image, {\n        style: styles.avatar,\n        source: {\n          uri: userData.image\n        }\n      }), _jsx(Text, {\n        style: styles.name,\n        children: userData.name\n      }), _jsx(Text, {\n        style: styles.title,\n        children: userData.companyName\n      }), _jsx(Text, {\n        style: styles.description,\n        children: userData.description\n      }), _jsxs(View, {\n        style: styles.iconRow,\n        children: [_jsx(Icon, {\n          name: \"phone\",\n          size: 30,\n          style: styles.icon,\n          onPress: function onPress() {\n            if (userData.phone) {\n              var phoneNumber = `tel:${userData.phone}`;\n              Linking.openURL(phoneNumber);\n            }\n          }\n        }), _jsx(Icon, {\n          name: \"facebook\",\n          size: 30,\n          style: styles.icon,\n          onPress: function onPress() {\n            if (userData.facebook) {\n              Linking.openURL(userData.facebook);\n            }\n          }\n        }), _jsx(Icon, {\n          name: \"linkedin\",\n          size: 30,\n          style: styles.icon,\n          onPress: function onPress() {\n            if (userData.linkedin) {\n              Linking.openURL(userData.linkedin);\n            }\n          }\n        }), _jsx(Icon, {\n          name: \"share\",\n          style: styles.icon,\n          size: 30,\n          onPress: function onPress() {\n            Share.share({\n              message: `${profileURL}`\n            });\n          }\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    padding: 16,\n    alignItems: 'center',\n    width: 'auto',\n    height: 'auto'\n  },\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 10\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  title: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 5\n  },\n  description: {\n    paddingTop: 16,\n    fontSize: 14,\n    color: '#777'\n  },\n  iconRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingTop: 5\n  },\n  icon: {\n    padding: 20,\n    marginRight: 5,\n    color: '#3B5998'\n  },\n  shareIcon: {\n    position: 'absolute',\n    right: 1\n  },\n  leftIcon: {\n    position: 'absolute',\n    left: 1\n  },\n  rightIcon: {\n    position: 'absolute',\n    right: 1\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Image","Alert","Text","IconButton","Background","ref","get","auth","database","Icon","Linking","Share","jsx","_jsx","jsxs","_jsxs","UserScreen","_ref","navigation","_useState","image","name","phone","companyName","description","facebook","linkedin","_useState2","_slicedToArray","userData","setUserData","_useState3","_useState4","profileURL","setProfileURL","userId","currentUser","uid","dbRef","then","snapshot","exists","data","val","console","log","alert","text","onPress","reset","index","routes","catch","error","children","style","styles","card","icon","color","size","leftIcon","rightIcon","avatar","source","uri","title","iconRow","phoneNumber","openURL","share","message","create","backgroundColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","padding","alignItems","marginBottom","fontSize","fontWeight","paddingTop","flexDirection","marginRight","shareIcon","position","right","left"],"sources":["E:/Github/thelastttt/src/screens/UserScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Image, Alert } from 'react-native';\r\nimport { Text, IconButton } from 'react-native-paper';\r\nimport Background from '../components/Background';\r\nimport { ref, get } from 'firebase/database';\r\nimport { auth, database } from '../../firebase';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Linking, Share } from 'react-native';\r\n\r\n\r\nexport default function UserScreen({ navigation }) {\r\n    const [userData, setUserData] = useState({\r\n        image: null,\r\n        name: '',\r\n        phone: '',\r\n        companyName: '',\r\n        description: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n    });\r\n\r\n    const [profileURL, setProfileURL] = useState('');\r\n\r\n    useEffect(() => {\r\n        const userId = auth.currentUser.uid;\r\n        const dbRef = ref(database, `users/${userId}`);\r\n\r\n        get(dbRef)\r\n            .then((snapshot) => {\r\n                if (snapshot.exists()) {\r\n                    const data = snapshot.val();\r\n                    setUserData({\r\n                        image: data.image,\r\n                        name: data.name,\r\n                        phone: data.phone,\r\n                        companyName: data.companyName,\r\n                        description: data.description,\r\n                        facebook: data.facebook,\r\n                        linkedin: data.linkedin,\r\n                    });\r\n\r\n                    // Tạo URL cho trang profile\r\n                    const profileURL = `http://192.168.1.42:5500/CardLink/detail.html?id=${userId}`;\r\n                    setProfileURL(profileURL); // Thay 'example.com' bằng domain thực tế của bạn\r\n                } else {\r\n                    console.log('Không tìm thấy dữ liệu người dùng.');\r\n                    Alert.alert('Lỗi dữ liệu!', 'Không tìm thấy dữ liệu người dùng..', [\r\n                        {\r\n                            text: 'Quay lại',\r\n                            onPress: () => {\r\n                                navigation.reset({\r\n                                    index: 0,\r\n                                    routes: [{ name: 'Dashboard' }],\r\n                                });\r\n                            },\r\n                        },\r\n                    ]);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('Lỗi khi truy cập dữ liệu:', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <Background>\r\n            <View style={styles.card}>\r\n                <IconButton\r\n                    icon=\"arrow-left\"\r\n                    color=\"#000\"\r\n                    size={20}\r\n                    onPress={() =>\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Dashboard' }],\r\n                        })\r\n                    }\r\n                    style={styles.leftIcon}\r\n                />\r\n                <IconButton\r\n                    icon=\"pencil\"\r\n                    color=\"#000\"\r\n                    size={20}\r\n                    onPress={() =>\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'EditScreen' }],\r\n                        })\r\n                    }\r\n                    style={styles.rightIcon}\r\n                />\r\n                <Image\r\n                    style={styles.avatar}\r\n                    source={{ uri: userData.image }}\r\n                />\r\n                <Text style={styles.name}>{userData.name}</Text>\r\n                <Text style={styles.title}>{userData.companyName}</Text>\r\n                <Text style={styles.description}>{userData.description}</Text>\r\n\r\n                <View style={styles.iconRow}>\r\n                    <Icon\r\n                        name=\"phone\"\r\n                        size={30}\r\n                        style={styles.icon}\r\n                        onPress={() => {\r\n                            if (userData.phone) {\r\n                                const phoneNumber = `tel:${userData.phone}`;\r\n                                Linking.openURL(phoneNumber);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Icon\r\n                        name=\"facebook\"\r\n                        size={30}\r\n                        style={styles.icon}\r\n                        onPress={() => {\r\n                            if (userData.facebook) {\r\n                                Linking.openURL(userData.facebook);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Icon\r\n                        name=\"linkedin\"\r\n                        size={30}\r\n                        style={styles.icon}\r\n                        onPress={() => {\r\n                            if (userData.linkedin) {\r\n                                Linking.openURL(userData.linkedin);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Icon\r\n                        name=\"share\"\r\n                        style={styles.icon}\r\n                        size={30}\r\n                        onPress={() => {\r\n                            Share.share({\r\n                                message: `${profileURL}`,\r\n                            });\r\n                        }}\r\n                    />\r\n                </View>\r\n            </View>\r\n        </Background>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        backgroundColor: '#fff',\r\n        borderRadius: 10,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n        padding: 16,\r\n        alignItems: 'center',\r\n        width: 'auto',\r\n        height: 'auto',\r\n    },\r\n    avatar: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 50,\r\n        marginBottom: 10,\r\n    },\r\n    name: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 5,\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        color: '#555',\r\n        marginBottom: 5,\r\n    },\r\n    description: {\r\n        paddingTop: 16,\r\n        fontSize: 14,\r\n        color: '#777',\r\n    },\r\n    iconRow: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingTop: 5,\r\n    },\r\n    icon: {\r\n        padding: 20,\r\n        marginRight: 5,\r\n        color: '#3B5998',\r\n    },\r\n    shareIcon: {\r\n        position: 'absolute',\r\n        right: 1,\r\n    },\r\n    leftIcon: {\r\n        position: 'absolute',\r\n        left: 1,\r\n    },\r\n    rightIcon: {\r\n        position: 'absolute',\r\n        right: 1,\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}