{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { signInWithEmailAndPassword, getAuth } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var emailError = emailValidator(email.value);\n      var passwordError = passwordValidator(password.value);\n      if (emailError || passwordError) {\n        setEmail(_objectSpread(_objectSpread({}, email), {}, {\n          error: emailError\n        }));\n        setPassword(_objectSpread(_objectSpread({}, password), {}, {\n          error: passwordError\n        }));\n        return;\n      }\n      try {\n        var auth = getAuth();\n        yield signInWithEmailAndPassword(auth, email.value, password.value);\n        navigation.reset({\n          index: 0,\n          routes: [{\n            name: 'Dashboard'\n          }]\n        });\n      } catch (error) {\n        Alert.alert('Lỗi đăng nhập', 'Đăng nhập thất bại. Vui lòng kiểm tra thông tin đăng nhập và thử lại.');\n      }\n    });\n    return function onLoginPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: navigation.goBack\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Ch\\xE0o m\\u1EEBng tr\\u1EDF l\\u1EA1i.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"M\\u1EADt kh\\u1EA9u\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Qu\\xEAn m\\u1EADt kh\\u1EA9u?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"\\u0110\\u0103ng nh\\u1EADp\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Kh\\xF4ng c\\xF3 t\\xE0i kho\\u1EA3n? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"\\u0110\\u0103ng k\\xFD\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","View","Alert","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","signInWithEmailAndPassword","getAuth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","onLoginPressed","_ref2","_asyncToGenerator","emailError","passwordError","_objectSpread","auth","reset","index","routes","name","alert","apply","arguments","children","goBack","label","returnKeyType","onChangeText","text","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","style","styles","forgotPassword","onPress","navigate","forgot","mode","row","replace","link","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"sources":["E:/Github/thelastttt/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, View, Alert } from 'react-native';\r\nimport { Text } from 'react-native-paper';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport BackButton from '../components/BackButton';\r\nimport { theme } from '../core/theme';\r\nimport { emailValidator } from '../helpers/emailValidator';\r\nimport { passwordValidator } from '../helpers/passwordValidator';\r\nimport { signInWithEmailAndPassword, getAuth } from 'firebase/auth';\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n  const onLoginPressed = async () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const auth = getAuth();\r\n      await signInWithEmailAndPassword(auth, email.value, password.value);\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: 'Dashboard' }],\r\n      });\r\n    } catch (error) {\r\n      Alert.alert('Lỗi đăng nhập', 'Đăng nhập thất bại. Vui lòng kiểm tra thông tin đăng nhập và thử lại.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={navigation.goBack} />\r\n      <Logo />\r\n      <Header>Chào mừng trở lại.</Header>\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Mật khẩu\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\r\n        >\r\n          <Text style={styles.forgot}>Quên mật khẩu?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed}>\r\n        Đăng nhập\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Không có tài khoản? </Text>\r\n\r\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\r\n          <Text style={styles.link}>Đăng ký</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}